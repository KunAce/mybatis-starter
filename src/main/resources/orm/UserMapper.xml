<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="orm.UserMapper">
    
    <select id="getUserById" resultType="user">
        SELECT * FROM user WHERE id=#{id};
    </select>

    <insert id="addUser" parameterType="user">
        INSERT INTO user (username, address) VALUES (#{username},#{address});
    </insert>

    <insert id="addUser2" parameterType="user">
        <selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE">
            SELECT uuid();
        </selectKey>
    INSERT INTO user (id, username,address) VALUES (#{id},#{username}, #{address});
    </insert>

    <insert id="addUser3" parameterType="user">
        <selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE">
            SELECT uuid();
        </selectKey>
        INSERT INTO user (id, username,address,favorites) VALUES (#{id}, #{username},#{address},#{favorites,typeHandler=orm.List2VarcharHandler});
    </insert>

    <delete id="deleteUserById" parameterType="string">
        DELETE FROM user WHERE id=#{id};
    </delete>

    <update id="updateUser" parameterType="user">
        UPDATE user
        <set>
            <if test="username!=null">
                username = #{username},
            </if>
            <if test="address!=null">
                address=#{address},
            </if>
            <if test="favorites!=null">
                favorites=#{favorites},
            </if>
        </set>
        WHERE id = #{id};
    </update>

    <select id="getAllUser" resultType="user">
        SELECT * FROM user;
    </select>

    <select id="getAllUserByOrder" resultType="user">
        SELECT * FROM user ORDER BY ${orderBy};
    </select>

    <update id="updateUsernameById">
        UPDATE user SET username = #{username} WHERE id = #{id};
    </update>
    
    <insert id="addUser4" parameterType="user">
        INSERT INTO user (username,address,favorites) VALUES (#{user.username},#{user.address},#{user.favorites,typeHandler=orm.List2VarcharHandler});
    </insert>

    <resultMap id="MyResultMap" type="user">
        <id column="id" property="id"/>
        <result column="username" property="username" />
        <result column="address" property="address" />
    </resultMap>
    
    <select id="getUserByIdMap" resultMap="MyResultMap">
        SELECT * FROM user WHERE id=#{id};
    </select>

    <select id="getUserByPage" resultType="user">
        SELECT * FROM user
        <if test="start != null and count != null">
            limit #{start},#{count}
        </if>
    </select>

    <select id="getUserByUsernameAndId" resultType="user">
        SELECT * FROM user
        <where>
            <if test="id!=null">
                AND id>#{id}
            </if>
            <if test="name!=null">
                AND username like concat('%',#{name},'%')
            </if>
        </where>
    </select>

    <select id="getUserByIds" resultType="user">
        SELECT <include refid="Base_Column"/> FROM user WHERE id in
        <foreach collection="ids" open="(" close=")" item = "id" separator=",">
            #{id}
        </foreach>
    </select>

    <insert id="batchInsertUser">
        INSERT INTO user (id,username,address) VALUES
        <foreach collection="users" separator="," item="user">
            (#{user.id}, #{user.username},#{user.address})
        </foreach>
    </insert>

    <sql id="Base_Column">
        id,username,address
    </sql>



</mapper>